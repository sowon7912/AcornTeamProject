<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="zipdle"> 
	<select id="insertZipdle" parameterType="zvo">
		insert into zip values (zip_seq_no.nextval, #{json}, 0, 0, sysdate, #{member_no})
	</select>
	<select id="getTotalCount" resultType="int">
		select count(*) from zip
	</select>
	<update id="updateZipHits" parameterType="int">
		update zip set zip_hits = zip_hits+1 where zip_seq_no = #{zip_seq_no}
	</update>
	<update id="updateZipGoodUp" parameterType="int">
		update zip set zip_good = zip_good+1 where zip_seq_no = #{zip_seq_no}
	</update>
	<update id="updateZipGoodDown" parameterType="int">
		update zip set zip_good = zip_good-1 where zip_seq_no = #{zip_seq_no}
	</update>
	<select id="getAllList" resultType="zvo">
		select * from zip
	</select>
	<select id="getZipData" parameterType="int" resultType="zvo">
		select * from zip where zip_seq_no = #{zip_seq_no}
	</select>
	<delete id="deleteZip" parameterType="int">
		delete from zip where zip_seq_no = #{zip_seq_no}
	</delete>
	
	<select id="getZipReplyCnt" resultType="int">
		select count(*) as count from z_reply where z_reply_no = #{zip_seq_no}
	</select>
	<delete id="deleteZipReply" parameterType="int">
		delete from z_reply where z_reply_seq_no = #{z_reply_seq_no}
	</delete>
	<select id="getReplyData" parameterType="int" resultType="zrvo">
		select * from z_reply where z_reply_seq_no = #{z_reply_seq_no}
	</select>
	<insert id="insertZipReply" parameterType="zrvo">
		insert into z_reply values (z_reply_seq_no.nextval, #{member_no}, #{z_reply_content}, sysdate, #{z_reply_no}, 0)
	</insert>
 	<select id="getAllZipReply" resultType="zrvo" parameterType="HashMap">
 	<![CDATA[
		select a.* from (select ROWNUM as RNUM, b.* from 
		(
	    select  z.z_reply_seq_no,
	            m.member_no,
	            z.z_reply_content,
	            z.reg_date,
	            z.z_reply_no,
	            z.z_reply_good,
	            m.member_image,
	            m.member_nickname
	    from z_reply z, member m
	    where z.member_no = m.member_no and z_reply_no = #{zip_seq_no}
	    order by z.reg_date desc
	    ) b where ROWNUM <= #{end} ) a 
		where a.RNUM >= #{start}
	]]>
	</select>
	<update id="upReplyGood" parameterType="int">
		update z_reply set z_reply_good = z_reply_good+1 where z_reply_seq_no = #{z_reply_seq_no}
	</update>
	<update id="downReplyGood" parameterType="int">
		update z_reply set z_reply_good = z_reply_good-1 where z_reply_seq_no = #{z_reply_seq_no}
	</update>
	
	<select id="getListWithMember" resultType="zvo">
		select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_image,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no
		order by z.reg_date desc
	</select>
	<select id="getHitsList" resultType="zvo">
		select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_image,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no
		order by z.zip_hits desc
	</select>
	<select id="getGoodList" resultType="zvo">
		select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_image,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no
		order by z.zip_good desc
	</select>
	<select id="getDateTypeList" resultType="zvo" parameterType="String">
		select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_image,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no and z.json.data.type = #{type}
		order by z.reg_date desc
	</select>
	<select id="getHitsTypeList" resultType="zvo" parameterType="String">
		select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_image,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no and z.json.data.type = #{type}
		order by z.zip_hits desc
	</select>
	<select id="getGoodTypeList" resultType="zvo" parameterType="String">
		select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_image,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no and z.json.data.type = #{type}
		order by z.zip_good desc
	</select>
	<select id="getDatePyeongList" resultType="zvo" parameterType="HashMap">
		<![CDATA[
		select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_image,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no and z.json.data.pyeong >= #{start} and z.json.data.pyeong < #{end}
		order by z.reg_date desc
		]]>
	</select>
	<select id="getHitsPyeongList" resultType="zvo" parameterType="HashMap">
		<![CDATA[
		select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_image,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no and z.json.data.pyeong >= #{start} and z.json.data.pyeong < #{end}
		order by z.zip_hits desc
		]]>
	</select>
	<select id="getGoodPyeongList" resultType="zvo" parameterType="HashMap">
		<![CDATA[
		select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_image,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no and z.json.data.pyeong >= #{start} and z.json.data.pyeong < #{end}
		order by z.zip_good desc
		]]>
	</select>
	<select id="getDate2CondiList" resultType="zvo" parameterType="HashMap">
		<![CDATA[
		select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_image,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no and z.json.data.pyeong >= #{start} and z.json.data.pyeong < #{end} and z.json.data.type = #{type}
		order by z.reg_date desc
		]]>
	</select>
		<select id="getGood2CondiList" resultType="zvo" parameterType="HashMap">
		<![CDATA[
		select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_image,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no and z.json.data.pyeong >= #{start} and z.json.data.pyeong < #{end} and z.json.data.type = #{type}
		order by z.zip_good desc
		]]>
	</select>
		<select id="getHits2CondiList" resultType="zvo" parameterType="HashMap">
		<![CDATA[
		select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_image,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no and z.json.data.pyeong >= #{start} and z.json.data.pyeong < #{end} and z.json.data.type = #{type}
		order by z.zip_hits desc
		]]>
	</select>
	
	<!-- 페이징 처리한 집들이 목록 -->
	<select id="getPagingZipList" parameterType="HashMap" resultType="zvo">
	<![CDATA[
		select a.* from (select ROWNUM as RNUM, b.* from 
		(
	    select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no
		order by z.reg_date desc
	    ) b where ROWNUM <= #{end} ) a 
		where a.RNUM >= #{start}
	]]>
	</select>
	<!-- like 조건으로 원하는 검색 결과를 가져온 집들이 목록 -->
	<select id="getFilterZipList" parameterType="HashMap" resultType="zvo">
	<![CDATA[
		select a.* from (select ROWNUM as RNUM, b.* from 
		(
	    select z.zip_seq_no,
			   z.json, 
			   z.zip_hits,
			   z.zip_good,
			   z.reg_date,
			   m.member_no,
			   m.member_nickname
		from zip z, member m
		where z.member_no = m.member_no and z.json.data.title like '%'||#{keyword}||'%'
		order by z.reg_date desc
	    ) b where ROWNUM <= #{end} ) a 
		where a.RNUM >= #{start}
	]]>
	</select>
</mapper>