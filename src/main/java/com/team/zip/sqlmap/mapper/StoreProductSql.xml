<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StoreProductSql">
	<select id="getProductList" parameterType="commonCodeVO" resultType="ProductVO">
		SELECT * FROM (
			SELECT ROWNUM AS RNUM, b.* from (
				SELECT PROD_NO AS prodNo
					 , PROD_TITLE AS prodTitle
					 , PROD_PRICE AS prodPrice
					 , PROD_IMG AS prodImage
					 , DISCOUNT_RATE AS discountRate
					 , PROD_SELLER AS prodSeller
					 , PROD_HITS AS prodHits
					 , REG_DATE AS regDate
					 , (SELECT COUNT(*) FROM REVIEW WHERE PROD_NO = P.PROD_NO) AS reviewCnt
					 , (SELECT SUM(REW_GRADE) FROM REVIEW WHERE PROD_NO = P.PROD_NO) AS starGrade
				  FROM PRODUCT P
				 WHERE CATEGORY_NM = #{codeVal}
				<if test="codeSeqNo != ''">
		    	   AND CATEGORY_NO = #{codeSeqNo}
		  		</if>
		  		<if test="minPrice != null and minPrice != ''">
		    	<![CDATA[ AND PROD_PRICE >= #{minPrice:VARCHAR} ]]>
		  		</if>
		  		<if test="maxPrice != null and maxPrice != ''">
				<![CDATA[ AND PROD_PRICE <= #{maxPrice:VARCHAR} ]]>
		  		</if>
		  		<if test="sorting == 'pop'">
		    	   ORDER BY PROD_HITS DESC 
		  		</if>
		  		<if test="sorting == 'highPrice'">
		    	   ORDER BY PROD_PRICE DESC 
		  		</if>
		  		<if test="sorting == 'lowPrice'">
		    	   ORDER BY PROD_PRICE ASC 
		  		</if>
		  		<if test="sorting == 'new'">
		    	   ORDER BY REG_DATE DESC 
		  		</if>
		  	)b
	  	)a 
		<![CDATA[ WHERE a.RNUM>=#{startNo} AND a.RNUM<=#{endNo}]]>
	</select>
	
	<select id="getProductTotalCount" parameterType="commonCodeVO" resultType="String">
		SELECT COUNT(*)
		FROM PRODUCT
		WHERE CATEGORY_NM = #{codeVal}
		<if test="codeSeqNo != ''">
    	   AND CATEGORY_NO = #{codeSeqNo}
  		</if>
	</select>
	
	<select id="getProductDetail" parameterType="String" resultType="ProductVO">
		SELECT PROD_NO AS prodNo
			 , PROD_TITLE AS prodTitle
			 , PROD_PRICE AS prodPrice
			 , PROD_IMG AS prodImage
			 , DISCOUNT_RATE AS discountRate
			 , PROD_SELLER AS prodSeller
			 , PROD_HITS AS prodHits
			 , (SELECT COUNT(*) FROM REVIEW WHERE PROD_NO = P.PROD_NO) AS reviewCnt
			 , (SELECT SUM(REW_GRADE) FROM REVIEW WHERE PROD_NO = P.PROD_NO) AS starGrade
		FROM PRODUCT P
		WHERE PROD_NO = #{prodNo}
	</select>
	
 	<update id="updateHits" parameterType="String">
		UPDATE PRODUCT SET PROD_HITS = PROD_HITS + 1
		WHERE PROD_NO = #{prodNo}
	</update>
	
	<insert id="insertReview" parameterType="storeReviewVO">
		INSERT INTO REVIEW (
			REW_NO,
			MEMBER_NO,
			PROD_NO,
			REW_IMG,
			REW_CONTENT,
			REW_GRADE,
			REG_DATE
		) VALUES (
			REW_NO.NEXTVAL,
			#{memberNo},
			#{prodNo},
			#{rewImg},
			#{rewContent},
			#{rewGrade},
			SYSDATE
		)
	</insert>
	
	<select id="getReviewList" parameterType="storeReviewVO" resultType="storeReviewVO">
		SELECT * FROM (
			SELECT ROWNUM AS RNUM, b.* from (
				SELECT R.REW_NO AS rewNo
					 , R.MEMBER_NO AS memberNo
					 , R.PROD_NO AS prodNo
					 , R.REW_IMG AS rewImg
					 , R.REW_CONTENT AS rewContent
					 , R.REW_GRADE AS rewGrade
					 , R.REG_DATE AS regDate
					 , M.MEMBER_NICKNAME AS memberNickname
					 , M.MEMBER_IMAGE AS memberImage
				FROM REVIEW R, MEMBER M
				WHERE R.MEMBER_NO = M.MEMBER_NO
				AND PROD_NO = #{prodNo}
			)b
	  	)a
	  	<![CDATA[ WHERE a.RNUM>=#{startNo} AND a.RNUM<=#{endNo}]]>
	</select>
	
	<select id="getReviewTotalCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM REVIEW
		WHERE PROD_NO = #{prodNo}
	</select>
</mapper>