<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StoreProductSql">
	<select id="getProductList" parameterType="commonCodeVO" resultType="ProductVO">
		SELECT * FROM (
			SELECT ROWNUM AS RNUM, b.* from (
				SELECT PROD_NO AS prodNo
					 , PROD_TITLE AS prodTitle
					 , PROD_PRICE AS prodPrice
					 , PROD_IMG AS prodImage
					 , DISCOUNT_RATE AS discountRate
					 , PROD_SELLER AS prodSeller
					 , PROD_HITS AS prodHits
					 , REG_DATE AS regDate
					 , (SELECT COUNT(*) FROM REVIEW WHERE PROD_NO = P.PROD_NO) AS reviewCnt
					 , (SELECT SUM(REW_GRADE) FROM REVIEW WHERE PROD_NO = P.PROD_NO) AS starGrade
				  FROM PRODUCT P
				 WHERE CATEGORY_NM = #{codeVal}
				<if test="codeSeqNo != ''">
		    	   AND CATEGORY_NO = #{codeSeqNo}
		  		</if>
		  		<if test="minPrice != null and minPrice != ''">
		    	<![CDATA[ AND PROD_PRICE >= #{minPrice:VARCHAR} ]]>
		  		</if>
		  		<if test="maxPrice != null and maxPrice != ''">
				<![CDATA[ AND PROD_PRICE <= #{maxPrice:VARCHAR} ]]>
		  		</if>
		  		<if test="sorting == 'pop'">
		    	   ORDER BY PROD_HITS DESC 
		  		</if>
		  		<if test="sorting == 'highPrice'">
		    	   ORDER BY PROD_PRICE DESC 
		  		</if>
		  		<if test="sorting == 'lowPrice'">
		    	   ORDER BY PROD_PRICE ASC 
		  		</if>
		  		<if test="sorting == 'new'">
		    	   ORDER BY REG_DATE DESC 
		  		</if>
		  	)b
	  	)a 
		<![CDATA[ WHERE a.RNUM>=#{startNo} AND a.RNUM<=#{endNo}]]>
	</select>
	
	<select id="getProductTotalCount" parameterType="commonCodeVO" resultType="String">
		SELECT COUNT(*)
		FROM PRODUCT
		WHERE CATEGORY_NM = #{codeVal}
		<if test="codeSeqNo != ''">
    	   AND CATEGORY_NO = #{codeSeqNo}
  		</if>
	</select>
	
	<select id="getProductDetail" parameterType="String" resultType="ProductVO">
		SELECT PROD_NO AS prodNo
			 , PROD_TITLE AS prodTitle
			 , PROD_PRICE AS prodPrice
			 , PROD_IMG AS prodImage
			 , DISCOUNT_RATE AS discountRate
			 , PROD_SELLER AS prodSeller
			 , PROD_HITS AS prodHits
			 , (SELECT COUNT(*) FROM REVIEW WHERE PROD_NO = P.PROD_NO) AS reviewCnt
			 , (SELECT SUM(REW_GRADE) FROM REVIEW WHERE PROD_NO = P.PROD_NO) AS starGrade
		FROM PRODUCT P
		WHERE PROD_NO = #{prodNo}
	</select>
	
 	<update id="updateHits" parameterType="String">
		UPDATE PRODUCT SET PROD_HITS = PROD_HITS + 1
		WHERE PROD_NO = #{prodNo}
	</update>
	
	<insert id="insertReview" parameterType="storeReviewVO">
		MERGE INTO REVIEW R
		USING DUAL
		ON (R.REW_NO = #{rewNo,jdbcType=NUMERIC})
		WHEN MATCHED THEN
		UPDATE
		SET REW_CONTENT = #{rewContent}
		  , REW_GRADE = #{rewGrade}
		<if test='rewImg != null and rewImg != ""'>
		  , REW_IMG = #{rewImg}
		</if>
		  , REG_DATE = SYSDATE
		WHEN NOT MATCHED THEN
		INSERT (
			REW_NO,
			MEMBER_NO,
			PROD_NO,
			REW_IMG,
			REW_CONTENT,
			REW_GRADE,
			REG_DATE
		) VALUES (
			REW_NO.NEXTVAL,
			#{memberNo},
			#{prodNo},
			#{rewImg},
			#{rewContent},
			#{rewGrade},
			SYSDATE
		)
	</insert>
	
	<select id="getReviewList" parameterType="storeReviewVO" resultType="storeReviewVO">
		SELECT * FROM (
			SELECT ROWNUM AS RNUM, b.* from (
				SELECT R.REW_NO AS rewNo
					 , R.MEMBER_NO AS memberNo
					 , R.PROD_NO AS prodNo
					 , R.REW_IMG AS rewImg
					 , R.REW_CONTENT AS rewContent
					 , R.REW_GRADE AS rewGrade
					 , R.REG_DATE AS regDate
					 , M.MEMBER_NICKNAME AS memberNickname
					 , M.MEMBER_IMAGE AS memberImage
					 , (SELECT 'Y' FROM MEMBER WHERE MEMBER_NO = #{memberNo,jdbcType=NUMERIC} AND REVIEW_LIKE LIKE '% '||R.REW_NO||',%') AS reviewLike
					 , (SELECT COUNT(*) FROM MEMBER WHERE REVIEW_LIKE LIKE '% '||R.REW_NO||',%') AS reviewLikeCnt
					 , DECODE(R.MEMBER_NO,#{memberNo,jdbcType=NUMERIC},'true','false') AS isLogin
				FROM REVIEW R, MEMBER M
				WHERE R.MEMBER_NO = M.MEMBER_NO
				AND PROD_NO = #{prodNo}
				<if test='imageOnly != null and imageOnly == "Y"'>
				AND R.REW_IMG IS NOT NULL
				</if>
				<if test='sorting == "best"'>
		    	   ORDER BY reviewLikeCnt DESC 
		  		</if>
		  		<if test='sorting == "new"'>
		    	   ORDER BY R.REG_DATE DESC 
		  		</if>
			)b
	  	)a
	  	<![CDATA[ WHERE a.RNUM>=#{startNo} AND a.RNUM<=#{endNo}]]>
	</select>
	
	<select id="getReviewTotalCount" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM REVIEW
		WHERE PROD_NO = #{prodNo}
	</select>
	
	<select id="selectReviewLike" parameterType="String" resultType="String">
		SELECT REVIEW_LIKE 
		FROM MEMBER
		WHERE MEMBER_NO = ${value}
	</select>
	
	<update id="toggleReviewLike" parameterType="mvo">
		UPDATE MEMBER SET REVIEW_LIKE = #{review_like}
		WHERE MEMBER_NO = ${member_no}
	</update>
	
	<select id="selectReviewListByRewNo" parameterType="int" resultType="storeReviewVO">
		SELECT R.REW_NO AS rewNo
			 , R.MEMBER_NO AS memberNo
			 , R.PROD_NO AS prodNo
			 , R.REW_IMG AS rewImg
			 , R.REW_CONTENT AS rewContent
			 , R.REW_GRADE AS rewGrade
			 , R.REG_DATE AS regDate
		FROM REVIEW R
		WHERE REW_NO = #{rewNo}
	</select>
	
	<update id="updateReview" parameterType="storeReviewVO">
		UPDATE REVIEW SET 
			REW_IMG = #{rewImg},
			REW_CONTENT = #{rewContent}, 
			REW_GRADE = #{rewGrade},
			REG_DATE = SYSDATE
		WHERE REW_NO = #{rewNo}
	</update>
	
	<delete id="deleteReview" parameterType="int">
		DELETE 
		FROM REVIEW
		WHERE REW_NO = #{rewNo}
	</delete>

	<select id="getProductOne" parameterType="String" resultType="productVO">
		SELECT PROD_NO AS prodNo
			 , PROD_TITLE AS prodTitle
			 , PROD_PRICE AS prodPrice
			 , PROD_IMG AS prodImage
			 , PROD_SELLER AS prodSeller
			 , DISCOUNT_RATE AS discountRate
		FROM PRODUCT
		WHERE PROD_NO = #{prodNo}
	</select>
</mapper>